/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doan;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
/**
 *
 * @author Admin
 */
public class ThongKeNhapHang extends javax.swing.JPanel {

    /**
     * Creates new form MyPham
     */
    static int SL1 = 0, SL2 = 0, SL3 = 0, SL4 = 0, SL5 = 0, SL6 = 0, SL7 = 0, SL8 = 0, SL9 = 0, SL10 = 0, SL11 = 0, SL12 = 0;
    static long tongTienMP = 0, tongTienDC = 0;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    Date HSD = null;
    String bang = "NHAPMYPHAM", loai = "Mỹ Phẩm";
    String bang1 = "MYPHAM", loai1 = "Mỹ Phẩm";
    String maxMP = "", maxDC = "";
    byte[] hinhMP = null, hinhDC = null;
    public ThongKeNhapHang(){
        initComponents();
        this.setBackground(Color.PINK);
        jPanelnen2.setBackground(Color.PINK);
        layThongTinMPMax(layMPMax());
        layThongTinDCMax(layDCMax());
        jComboBox1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(e.getSource() == jComboBox1){
                    loai = (String) jComboBox1.getSelectedItem();
                    if(loai.equals("Mỹ Phẩm")){
                        bang = "NHAPMYPHAM";
                    }else{
                        bang = "NHAPDUNGCU";
                    }
                }
            }
        });
        jComboBox3.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(e.getSource() == jComboBox3){
                    loai1 = (String) jComboBox3.getSelectedItem();
                    if(loai1.equals("Mỹ Phẩm")){
                        bang1 = "MYPHAM";
                    }else{
                        bang1 = "DUNGCU";
                    }
                }
            }
        });
    }

    public static JFreeChart createChart() {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Biểu Đồ Nhập",
                "Tháng", "Số Lượng",
                createDataset(), PlotOrientation.VERTICAL, false, false, false);
        return barChart;
    }

    public static CategoryDataset createDataset() {
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addValue(SL1, "Số Lượng", "01");
        dataset.addValue(SL2, "Số Lượng", "02");
        dataset.addValue(SL3, "Số Lượng", "03");
        dataset.addValue(SL4, "Số Lượng", "04");
        dataset.addValue(SL5, "Số Lượng", "05");
        dataset.addValue(SL6, "Số Lượng", "06");
        dataset.addValue(SL7, "Số Lượng", "07");
        dataset.addValue(SL8, "Số Lượng", "08");
        dataset.addValue(SL9, "Số Lượng", "09");
        dataset.addValue(SL10, "Số Lượng", "10");
        dataset.addValue(SL11, "Số Lượng", "11");
        dataset.addValue(SL12, "Số Lượng", "12");
        return dataset;
    }

    private int laySL(String date1, String date2){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        
        String sql = "select SOLUONG from " + bang + " where NGAYNHAP >= '" + date1 + "' AND NGAYNHAP <= '" + date2 + "'";
        try{
            try (PreparedStatement ps = ketNoi.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                while(rs.next()){
                    sum += Integer.parseInt(rs.getString("SOLUONG"));
                }
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(DangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    /**
     * This method is called from within the constructor to initialize the form.WARNING: Do NOT modify this code.
     * The content of this method is always
 regenerated by the Form Editor.
     * @return 
     */
    
    //bieu do tron
    private static JFreeChart createChart1(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart(
                "Biểu Đồ Tổng Tiền Nhập", dataset, true, true, true);
        return chart;
    }

    private static PieDataset createDataset2(long MP, long DC) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Tổng Tiền Nhập Mỹ Phẩm: " + String.format("%,d", MP), MP);
        dataset.setValue("Tổng Tiền Nhập Dụng Cụ: " + String.format("%,d", DC), DC);
        return dataset;
    }
    private static JFreeChart createChart2(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart(
                "Biểu Đồ Tình Trạng", dataset, true, true, true);
        return chart;
    }

    private static PieDataset createDataset3(int SLT, int SLSD, int SLH) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Số Lượng Tốt: " + SLT, SLT);
        dataset.setValue("Số Lượng Đã Sử Dụng: " + SLSD, SLSD);
        dataset.setValue("Số Lượng Hỏng: " + SLH , SLH);
        return dataset;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_SL = new javax.swing.JButton();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jYearChooser2 = new com.toedter.calendar.JYearChooser();
        jButton_GT = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton_GT1 = new javax.swing.JButton();
        jPanelnen2 = new javax.swing.JPanel();
        jLabel_HinhMyPham = new javax.swing.JLabel();
        jLabel_maMP = new javax.swing.JLabel();
        jLabel_tenMP = new javax.swing.JLabel();
        jLabel_LoaiMP = new javax.swing.JLabel();
        jLabel_SLSD = new javax.swing.JLabel();
        jLabel_HinhDungCu = new javax.swing.JLabel();
        jLabel_maDC = new javax.swing.JLabel();
        jLabel_tenDC = new javax.swing.JLabel();
        jLabel_LoaiDC = new javax.swing.JLabel();
        jLabel_SLMuon = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        label1 = new java.awt.Label();

        jButton_SL.setText("Xem Biểu Đồ");
        jButton_SL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SLActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mỹ Phẩm", "Dụng Cụ" }));

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THỐNG KÊ SỐ LƯỢNG MỸ PHẨM, DỤNG CỤ THEO NĂM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Loại:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Năm:");

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("THỐNG KÊ SỐ TIỀN NHẬP MỸ PHẨM, DỤNG CỤ THEO NĂM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Năm:");

        jButton_GT.setText("Xem Biểu Đồ");
        jButton_GT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GTActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(51, 204, 255));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("THỐNG KÊ TÌNH TRẠNG MỸ PHẨM, DỤNG CỤ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Loại:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mỹ Phẩm", "Dụng Cụ" }));

        jButton_GT1.setText("Xem Biểu Đồ");
        jButton_GT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GT1ActionPerformed(evt);
            }
        });

        jLabel_HinhMyPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel_HinhMyPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_HinhMyPham.setText("IMAGE");

        jLabel_maMP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_maMP.setText("Mã Mỹ Phẩm:");

        jLabel_tenMP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_tenMP.setText("Tên Mỹ Phẩm:");

        jLabel_LoaiMP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_LoaiMP.setText("Loại Mỹ Phẩm:");

        jLabel_SLSD.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_SLSD.setText("Số Lượng Đã Sử Dụng:");

        jLabel_HinhDungCu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel_HinhDungCu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_HinhDungCu.setText("IMAGE");

        jLabel_maDC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_maDC.setText("Mã Dụng Cụ:");

        jLabel_tenDC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_tenDC.setText("Tên Dụng Cụ:");

        jLabel_LoaiDC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_LoaiDC.setText("Loại Dụng Cụ:");

        jLabel_SLMuon.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel_SLMuon.setText("Số Lượng Mượn:");

        jPanel5.setBackground(new java.awt.Color(51, 204, 255));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MỸ PHẨM ĐƯỢC SỬ DỤNG NHIỀU NHẤT");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(51, 204, 255));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("DỤNG CỤ ĐƯỢC MƯỢN NHIỀU NHẤT");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelnen2Layout = new javax.swing.GroupLayout(jPanelnen2);
        jPanelnen2.setLayout(jPanelnen2Layout);
        jPanelnen2Layout.setHorizontalGroup(
            jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelnen2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelnen2Layout.createSequentialGroup()
                        .addComponent(jLabel_HinhMyPham, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_maMP)
                            .addComponent(jLabel_tenMP)
                            .addComponent(jLabel_LoaiMP)
                            .addComponent(jLabel_SLSD)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelnen2Layout.createSequentialGroup()
                        .addComponent(jLabel_HinhDungCu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_maDC)
                            .addComponent(jLabel_tenDC)
                            .addComponent(jLabel_LoaiDC)
                            .addComponent(jLabel_SLMuon)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanelnen2Layout.setVerticalGroup(
            jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelnen2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelnen2Layout.createSequentialGroup()
                        .addComponent(jLabel_maMP)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel_tenMP)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel_LoaiMP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_SLSD))
                    .addComponent(jLabel_HinhMyPham, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanelnen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelnen2Layout.createSequentialGroup()
                        .addComponent(jLabel_maDC)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel_tenDC)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel_LoaiDC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_SLMuon))
                    .addComponent(jLabel_HinhDungCu, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel1.setBackground(new java.awt.Color(255, 204, 0));
        panel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label1.setText("THỐNG KÊ");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButton_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton_GT1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jYearChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton_GT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanelnen2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelnen2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton_SL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jYearChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)
                                .addComponent(jButton_GT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_GT1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(152, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_SLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SLActionPerformed
        String year = String.valueOf(jYearChooser1.getYear());
        String month2 = "";
        if ((jYearChooser1.getYear() % 4 == 0 && jYearChooser1.getYear() % 100 != 0) || (jYearChooser1.getYear() % 400 == 0)) {
              month2 = "29";     
        }else {
              month2 = "28";      
        }
        SL1 = laySL(year + "-01-01", year + "-01-31");
        SL2 = laySL(year + "-02-01", year + "-02-" + month2);
        SL3 = laySL(year + "-03-01", year + "-03-31");
        SL4 = laySL(year + "-04-01", year + "-04-30");
        SL5 = laySL(year + "-05-01", year + "-05-31");
        SL6 = laySL(year + "-06-01", year + "-06-30");
        SL7 = laySL(year + "-07-01", year + "-07-31");
        SL8 = laySL(year + "-08-01", year + "-08-31");
        SL9 = laySL(year + "-09-01", year + "-09-30");
        SL10 = laySL(year + "-10-01", year + "-10-31");
        SL11 = laySL(year + "-11-01", year + "-11-30");
        SL12 = laySL(year + "-12-01", year + "-12-31");
        ChartPanel chartPanel = new ChartPanel(createChart());
        chartPanel.setPreferredSize(new java.awt.Dimension(600, 350));
        JFrame frame = new JFrame();
        frame.add(chartPanel);
        frame.setTitle("Biểu đồ Nhập " + loai + " Năm " + year);
        frame.setSize(600, 400);
        frame.setLocationRelativeTo(null);
        frame.setResizable(false);
        frame.setVisible(true);
        
    }//GEN-LAST:event_jButton_SLActionPerformed

    private void jButton_GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GTActionPerformed
       String year = String.valueOf(jYearChooser2.getYear());
       String date1 = year + "-01-01";
       String date2 = year + "-12-31";
       long tongTienMP = loadTongTienMP(date1, date2);
       long tongTienDC = loadTongTienDC(date1, date2);
       JFreeChart pieChart = createChart1(createDataset2(tongTienMP, tongTienDC));
       ChartPanel chartPanel = new ChartPanel(pieChart);
       JFrame frame = new JFrame();
       frame.add(chartPanel);
       frame.setTitle("Biểu Đồ Tổng Tiền Nhập Theo Năm " + year);
       frame.setSize(600, 400);
       frame.setLocationRelativeTo(null);
       frame.setVisible(true);
    }//GEN-LAST:event_jButton_GTActionPerformed

    private void jButton_GT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GT1ActionPerformed
        int SLT = 0, SLSD = 0, SLH = 0;
        if(bang1.equals("MYPHAM")){
            SLT = laySLMPT();
            SLSD = laySLMPSD();
            SLH = laySLMPH();
        }
        else{
            SLT = laySLDCT();
            SLSD = laySLDCSD();
            SLH = laySLDCH();
        }
       JFreeChart pieChart = createChart2(createDataset3(SLT, SLSD, SLH));
       ChartPanel chartPanel = new ChartPanel(pieChart);
       JFrame frame = new JFrame();
       frame.add(chartPanel);
       frame.setTitle("Biểu Đồ Tình Trạng " + loai1);
       frame.setSize(600, 400);
       frame.setLocationRelativeTo(null);
       frame.setVisible(true);
    }//GEN-LAST:event_jButton_GT1ActionPerformed
   private long loadTongTienMP(String date1, String date2){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        long sum = 0;
        String sql = "select GIATIEN from NHAPMYPHAM where NGAYNHAP >= '" + date1 + "' AND NGAYNHAP <= '" + date2 + "'";
        try{
            try (PreparedStatement ps = ketNoi.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                while(rs.next()){
                    sum += Integer.parseInt(rs.getString("GIATIEN"));
                }
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(DangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
   private long loadTongTienDC(String date1, String date2){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        long sum = 0;
        String sql = "select GIATIEN from NHAPDUNGCU where NGAYNHAP >= '" + date1 + "' AND NGAYNHAP <= '" + date2 + "'";
        try{
            try (PreparedStatement ps = ketNoi.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                while(rs.next()){
                    sum += Integer.parseInt(rs.getString("GIATIEN"));
                }
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(DangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLMPT(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLMPT from TINHTRANGMYPHAM";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLMPT");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLMPSD(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLMPSD from TINHTRANGMYPHAM";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLMPSD");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLMPH(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLMPH from TINHTRANGMYPHAM";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLMPH");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLDCT(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLDCT from TINHTRANGDUNGCU";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLDCT");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLDCSD(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLDCSD from TINHTRANGDUNGCU";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLDCSD");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private int laySLDCH(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int sum = 0;
        String sql = "select SLDCH from TINHTRANGDUNGCU";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                sum += rs.getInt("SLDCH");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sum;
    }
    private String layMPMax(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ma = "";
        String sql = "select MAMYPHAM, SLMPSD from TINHTRANGMYPHAM where SLMPSD = (SELECT MAX(SLMPSD) from TINHTRANGMYPHAM)";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                ma = rs.getString("MAMYPHAM").trim();
                maxMP = rs.getString("SLMPSD").trim();
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ma;
    }
    private void layThongTinMPMax(String maMP){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ma = "";
        String sql = "select * from MYPHAM where MAMYPHAM = '" + maMP + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jLabel_maMP.setText(jLabel_maMP.getText() + " " + maMP);
                jLabel_tenMP.setText(jLabel_tenMP.getText() + " " + rs.getString("TENMYPHAM").trim());
                jLabel_SLSD.setText(jLabel_SLSD.getText() + " " + maxMP);
                jLabel_LoaiMP.setText(jLabel_LoaiMP.getText() + " " + loadTenLoai(rs.getString("MALOAIMYPHAM").trim()));
                hinhMP = rs.getBytes("HINHANH");
                ImageIcon icon = new ImageIcon(new ImageIcon(hinhMP).getImage().getScaledInstance(170, 170, Image.SCALE_SMOOTH));
                jLabel_HinhMyPham.setIcon(icon);
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private String loadTenLoai(String maLoai){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ten = "";
        String sql = "select TENLOAIMYPHAM from LOAIMYPHAM Where MALOAIMYPHAM = '" + maLoai + "'";
        
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                ten = rs.getString("TENLOAIMYPHAM").trim();
            }
            ketNoi.close();
            
        }
        catch(SQLException ex){
            Logger.getLogger(MyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ten;
    }
    private String layDCMax(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ma = "";
        String sql = "select MADUNGCU, SLDCSD from TINHTRANGDUNGCU where SLDCSD = (SELECT MAX(SLDCSD) from TINHTRANGDUNGCU)";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                ma = rs.getString("MADUNGCU").trim();
                maxDC = rs.getString("SLDCSD").trim();
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ma;
    }
    private void layThongTinDCMax(String maDC){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ma = "";
        String sql = "select * from DUNGCU where MADUNGCU = '" + maDC + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jLabel_maDC.setText(jLabel_maDC.getText() + " " + maDC);
                jLabel_tenDC.setText(jLabel_tenDC.getText() + " " + rs.getString("TENDUNGCU").trim());
                jLabel_SLMuon.setText(jLabel_SLMuon.getText() + " " + maxDC);
                jLabel_LoaiDC.setText(jLabel_LoaiDC.getText() + " " + loadTenLoaiDC(rs.getString("MALOAIDUNGCU").trim()));
                hinhDC = rs.getBytes("HINHANH");
                ImageIcon icon = new ImageIcon(new ImageIcon(hinhDC).getImage().getScaledInstance(170, 170, Image.SCALE_SMOOTH));
                jLabel_HinhDungCu.setIcon(icon);
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private String loadTenLoaiDC(String maLoai){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String ten = "";
        String sql = "select TENLOAIDUNGCU from LOAIDUNGCU Where MALOAIDUNGCU = '" + maLoai + "'";
        
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                ten = rs.getString("TENLOAIDUNGCU").trim();
            }
            ketNoi.close();
            
        }
        catch(SQLException ex){
            Logger.getLogger(MyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ten;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_GT;
    private javax.swing.JButton jButton_GT1;
    private javax.swing.JButton jButton_SL;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_HinhDungCu;
    private javax.swing.JLabel jLabel_HinhMyPham;
    private javax.swing.JLabel jLabel_LoaiDC;
    private javax.swing.JLabel jLabel_LoaiMP;
    private javax.swing.JLabel jLabel_SLMuon;
    private javax.swing.JLabel jLabel_SLSD;
    private javax.swing.JLabel jLabel_maDC;
    private javax.swing.JLabel jLabel_maMP;
    private javax.swing.JLabel jLabel_tenDC;
    private javax.swing.JLabel jLabel_tenMP;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelnen2;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private com.toedter.calendar.JYearChooser jYearChooser2;
    private java.awt.Label label1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
