/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doan;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class XoaSua extends javax.swing.JFrame {

    /**
     * Creates new form XoaSua
     */
    private String loai = "";
    private String ma = "";
    private String nut = "";
    public XoaSua(String loai, String ma, String nut) {
        this.loai = loai;
        this.ma = ma;
        this.nut = nut;
        initComponents();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);
        if(loai.equals("Mỹ Phẩm")){
            jButton_XoaSua.setText("Xóa");
            this.setTitle("Xóa Mỹ Phẩm");
        }
        else{
            if(nut.equals("xoa")){
                jButton_XoaSua.setText("Xóa");
                this.setTitle("Xóa Dụng Cụ");
            }
            else{
                jButton_XoaSua.setText("Sửa");
                this.setTitle("Sửa Dụng Cụ");
            }
        }
    }
    public XoaSua() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_XoaSua = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_SL = new javax.swing.JTextField();
        jButton_XoaSua = new javax.swing.JButton();
        jButton_Huy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Số Lượng:");

        jTextField_SL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextField_SL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_SLKeyTyped(evt);
            }
        });

        jButton_XoaSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_XoaSua.setText("Xóa");
        jButton_XoaSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaSuaActionPerformed(evt);
            }
        });

        jButton_Huy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_Huy.setText("Hủy");
        jButton_Huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_HuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_XoaSuaLayout = new javax.swing.GroupLayout(jPanel_XoaSua);
        jPanel_XoaSua.setLayout(jPanel_XoaSuaLayout);
        jPanel_XoaSuaLayout.setHorizontalGroup(
            jPanel_XoaSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_XoaSuaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(jPanel_XoaSuaLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jButton_XoaSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Huy)
                .addGap(89, 89, 89))
        );
        jPanel_XoaSuaLayout.setVerticalGroup(
            jPanel_XoaSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_XoaSuaLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel_XoaSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_SL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel_XoaSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_XoaSua)
                    .addComponent(jButton_Huy))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_XoaSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_XoaSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_XoaSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaSuaActionPerformed
       int SL = 0, SLT = 0, SLH = 0;
       int KTSL = 0;
       if(!jTextField_SL.getText().equals("")){
           SL = Integer.valueOf(jTextField_SL.getText());
       }
       if(jTextField_SL.getText().equals("")){
            KTSL = 1;
            JOptionPane.showMessageDialog(this, "Số lượng không được trống");
       }
       if(loai.equals("Mỹ Phẩm") && KTSL != 1){
           if(!ma.equals("")){
                if(SL > (laySLMP(ma) + laySLMPH(ma))){
                    JOptionPane.showMessageDialog(this, "Số Lượng Mỹ Phẩm Không Đủ Để Xóa");
                }
                else{
                    if(SL >= laySLMPH(ma)){
                        SL = SL - laySLMPH(ma);
                        if(SL > 0){
                            SLT = laySLMP(ma) - SL;
                        }
                        else{
                            SLT = laySLMP(ma);
                        }
                    }
                    else{
                        SLH = laySLMPH(ma) - SL;
                        SLT = laySLMP(ma);
                    }
                    xoaMyPham(ma, SLT, SLH);
                    JOptionPane.showMessageDialog(this, "Xóa Mỹ Phẩm Thành Công");
                }
           }
           else{
               JOptionPane.showMessageDialog(this, "Chưa Chọn Mỹ Phẩm");
           }
           this.dispose();
       }
       if(loai.equals("Dụng Cụ") && nut.equals("xoa") && KTSL != 1){
           if(!ma.equals("")){
                if(SL > (laySLDC(ma) + laySLDCH(ma))){
                    JOptionPane.showMessageDialog(this, "Số Lượng Dụng Cụ Không Đủ");
                }
                else{
                    if(SL >= laySLDCH(ma)){
                        SL = SL - laySLDCH(ma);
                        if(SL > 0){
                            SLT = laySLDC(ma) - SL;
                        }
                        else{
                            SLT = laySLDC(ma);
                        }
                    }
                    else{
                        SLH = laySLDCH(ma) - SL;
                        SLT = laySLDC(ma);
                    }
                    xoaSuaDungCu(ma, SLT, SLH);
                    JOptionPane.showMessageDialog(this, "Xóa Dụng Cụ Thành Công");
                }
           }
           else{
               JOptionPane.showMessageDialog(this, "Chưa Chọn Dụng Cụ");
           }
           this.dispose();
       }
       if(loai.equals("Dụng Cụ") && nut.equals("sua") && KTSL != 1){
           if(!ma.equals("")){
               if(SL > laySLDCH(ma)){
                    JOptionPane.showMessageDialog(this, "Số Lượng Dụng Cụ Hỏng Không Đủ");
               }
               else{
                    SLH = laySLDCH(ma) - SL;
                    SLT = laySLDC(ma) + SL;
                    xoaSuaDungCu(ma, SLT, SLH);
                    JOptionPane.showMessageDialog(this, "Sửa Dụng Cụ Thành Công");
              }
           }
           else{
               JOptionPane.showMessageDialog(this, "Chưa Chọn Dụng Cụ");
           }
           this.dispose();
       }
       
    }//GEN-LAST:event_jButton_XoaSuaActionPerformed

    private void jButton_HuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_HuyActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_HuyActionPerformed

    private void jTextField_SLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SLKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_SLKeyTyped
    private void xoaMyPham(String maMP, int SL1, int SL2){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "UPDATE TINHTRANGMYPHAM SET SLMPT = ?, SLMPH = ? WHERE MAMYPHAM = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setInt(1, SL1);
            ps.setInt(2, SL2);
            ps.setString(3, maMP);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(ThongTinTinhTrang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void xoaSuaDungCu(String maDC, int SL1, int SL2){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "UPDATE TINHTRANGDUNGCU SET SLDCT = ?, SLDCH = ? WHERE MADUNGCU = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setInt(1, SL1);
            ps.setInt(2, SL2);
            ps.setString(3, maDC);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(ThongTinTinhTrang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private int laySLMP(String maMP){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int SL = 0;
        String sql = "select SLMPT from TINHTRANGMYPHAM where MAMYPHAM = '" + maMP + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                SL = rs.getInt("SLMPT");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return SL;
    }
    private int laySLDC(String maDC){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int SL = 0;
        String sql = "select SLDCT from TINHTRANGDUNGCU where MADUNGCU = '" + maDC + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                SL = rs.getInt("SLDCT");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return SL;
    }
    private int laySLMPH(String maMP){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int SL = 0;
        String sql = "select SLMPH from TINHTRANGMYPHAM where MAMYPHAM = '" + maMP + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                SL = rs.getInt("SLMPH");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return SL;
    }
    private int laySLDCH(String maDC){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        int SL = 0;
        String sql = "select SLDCH from TINHTRANGDUNGCU where MADUNGCU = '" + maDC + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                SL = rs.getInt("SLDCH");
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(NhapMyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return SL;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XoaSua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XoaSua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XoaSua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XoaSua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new XoaSua().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Huy;
    private javax.swing.JButton jButton_XoaSua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel_XoaSua;
    private javax.swing.JTextField jTextField_SL;
    // End of variables declaration//GEN-END:variables
}
