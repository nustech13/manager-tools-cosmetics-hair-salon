/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doan;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */

public class ThongTinNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form ChiTietNhanVien
     */
    String user = "";
    private String taiKhoanQL = "";
    public ThongTinNhanVien(String taiKhoanQL) {
        this.taiKhoanQL = taiKhoanQL;
        initComponents();
        this.setBackground(Color.PINK);
        Load_NV();
        if(!layChucVu(taiKhoanQL).equals("Admin")){
            jButton_Quyen.setVisible(false);
        }
    }
    public ThongTinNhanVien() {
        initComponents();
        Load_NV();
    }
    private void Load_NV(){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        DefaultTableModel dtm = (DefaultTableModel) jTable_NV.getModel();
        dtm.setNumRows(0);
        String sql = "select * from NHANVIEN";
        Vector<String> vt;
        try{
            try (PreparedStatement ps = ketNoi.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                if(layChucVu(taiKhoanQL).equals("Quản Lý")){
                    while(rs.next()){
                        if(rs.getString("CHUCVU").trim().equals("Nhân Viên")){
                            vt = new Vector<>();
                            vt.add(rs.getString("TAIKHOAN").trim());
                            vt.add(rs.getString("HOTEN").trim());
                            vt.add(rs.getString("CHUCVU").trim());
                            vt.add(rs.getString("SDT").trim());
                            vt.add(rs.getString("EMAIL").trim());
                            dtm.addRow(vt);
                        }
                    }
                }else if(layChucVu(taiKhoanQL).equals("Admin")){
                    while(rs.next()){
                        if(rs.getString("CHUCVU").trim().equals("Nhân Viên") || rs.getString("CHUCVU").trim().equals("Quản Lý")){
                            vt = new Vector<>();
                            vt.add(rs.getString("TAIKHOAN").trim());
                            vt.add(rs.getString("HOTEN").trim());
                            vt.add(rs.getString("CHUCVU").trim());
                            vt.add(rs.getString("SDT").trim());
                            vt.add(rs.getString("EMAIL").trim());
                            dtm.addRow(vt);
                        }
                    }
                    
                }
                
                jTable_NV.setModel(dtm);
                jTable_NV.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        if(jTable_NV.getSelectedRow() >= 0){
                            user = jTable_NV.getValueAt(jTable_NV.getSelectedRow(), 0) + "";
                        }
                    }
                });
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(ThongTinNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_NV = new javax.swing.JTable();
        jButton_Xoa = new javax.swing.JButton();
        jButton_Quyen = new javax.swing.JButton();

        jTable_NV.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTable_NV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tài Khoản", "Họ Tên", "Chức Vụ", "SĐT", "Email"
            }
        ));
        jScrollPane1.setViewportView(jTable_NV);

        jButton_Xoa.setBackground(new java.awt.Color(51, 153, 255));
        jButton_Xoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_Xoa.setText("Xóa");
        jButton_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaActionPerformed(evt);
            }
        });

        jButton_Quyen.setBackground(new java.awt.Color(51, 153, 255));
        jButton_Quyen.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton_Quyen.setText("Cấp/Hủy Quyền");
        jButton_Quyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_QuyenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton_Quyen)
                .addGap(78, 78, 78)
                .addComponent(jButton_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Xoa)
                    .addComponent(jButton_Quyen))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaActionPerformed
        int KT = kiemTraMuon(user);
        if(KT != 1){
            int ret = JOptionPane.showConfirmDialog(this, "Bạn Chắc Chắn Muốn Xóa", "Xác Nhận", 0);
            if(ret == JOptionPane.NO_OPTION){
                JOptionPane.showMessageDialog(this, "Xóa Xóa Nhân Viên Không Thành Công");
            }
            else if(ret == JOptionPane.OK_OPTION){
                xoaNhanVien(user);
                JOptionPane.showMessageDialog(this, "Xóa Nhân Viên Thành Công");
                Load_NV();
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Nhân Viên Chưa Trả Hết Dụng Cụ Mượn");
        }
                
    }//GEN-LAST:event_jButton_XoaActionPerformed

    private void jButton_QuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_QuyenActionPerformed
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "UPDATE NHANVIEN SET CHUCVU = ? WHERE TAIKHOAN = ?";
        String CV = "";
        if(layChucVu(user).equals("Nhân Viên")){
            CV = "Quản Lý";
        }else{
            CV = "Nhân Viên";
        }
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, CV);
            ps.setString(2, user);
            ps.executeUpdate();
        }
        catch(SQLException ex){
            Logger.getLogger(ThongTinNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        Load_NV();
    }//GEN-LAST:event_jButton_QuyenActionPerformed
    private void xoaNhanVien(String user){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "delete from NHANVIEN where TAIKHOAN = ?";
        try{
            try (PreparedStatement ps = ketNoi.prepareStatement(sql)) {
                ps.setString(1, user);
                ps.executeUpdate();
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(ThongTinNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private String layChucVu(String username){
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "select CHUCVU from NHANVIEN WHERE TAIKHOAN = '" + username + "'";
        String kt = "";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                kt = rs.getString("CHUCVU").trim();
            }
            ketNoi.close();
            
        }
        catch(SQLException ex){
            Logger.getLogger(ThongTinNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        return kt;
    }
    private int kiemTraMuon(String user){
        int tontai = 0;
        Connection ketNoi = KetNoiSQL.layKetNoi();
        String sql = "select * from PHIEUMUON where TAIKHOAN = '" + user + "'";
        try{
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                tontai = 1;
            }
            ketNoi.close();
        }
        catch(SQLException ex){
            Logger.getLogger(MyPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tontai;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Quyen;
    private javax.swing.JButton jButton_Xoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_NV;
    // End of variables declaration//GEN-END:variables
}
